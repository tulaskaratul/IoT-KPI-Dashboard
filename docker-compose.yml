services:
  postgres:
    image: postgres:15-alpine
    container_name: iot_kpi_postgres
    environment:
      POSTGRES_DB: iot_kpi_db
      POSTGRES_USER: iot_user
      POSTGRES_PASSWORD: iot_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - iot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iot_user -d iot_kpi_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana:latest
    container_name: iot_kpi_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - iot_network

  api:
    build: 
      context: .
      dockerfile: Dockerfile.api
    container_name: iot_kpi_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://iot_user:iot_password@postgres:5432/iot_kpi_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    networks:
      - iot_network

  data_collector:
    build:
      context: .
      dockerfile: Dockerfile.collector
    container_name: iot_kpi_collector
    environment:
      - DATABASE_URL=postgresql://iot_user:iot_password@postgres:5432/iot_kpi_db
      - REDIS_URL=redis://redis:6379
      - SAMASTH_API_URL=https://samasth.io/api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    networks:
      - iot_network

  redis:
    image: redis:7-alpine
    container_name: iot_kpi_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - iot_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: iot_kpi_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - grafana
    networks:
      - iot_network

volumes:
  postgres_data:
  grafana_data:
  redis_data:

networks:
  iot_network:
    driver: bridge
